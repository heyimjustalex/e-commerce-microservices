# Dev version is without tests and live reload
version: "3.9"
services:
  adminpanel-authentication-db:
    image: mongo-express:1-20-alpine3.19
    container_name: adminpanel-authentication-db
    depends_on:
      - authentication-db
    restart: always
    ports:
      - "8081:8081"
    environment:
      # this does not seem to work to modify connection server
      - ME_CONFIG_MONGODB_SERVER=authentication-db
      # but this does for some reason
      - ME_CONFIG_MONGODB_URL=mongodb://root:root@authentication-db:27017/
      # db connection username and password because one from link above don't work
      - ME_CONFIG_MONGODB_AUTH_USERNAME=root
      - ME_CONFIG_MONGODB_AUTH_PASSWORD=root
      - ME_CONFIG_MONGODB_PORT=27017
    # to login to panel use: admin/pass
    networks:
      - network

  adminpanel-products-db:
    image: mongo-express:1-20-alpine3.19
    container_name: adminpanel-products-db
    depends_on:
      - products-db
    restart: always
    ports:
      - "8082:8081"
    environment:
      # this does not seem to work to modify connection server
      - ME_CONFIG_MONGODB_SERVER=products-db
      # but this does for some reason
      - ME_CONFIG_MONGODB_URL=mongodb://root:root@products-db:27017/
      # db connection username and password because one from link above don't work
      - ME_CONFIG_MONGODB_AUTH_USERNAME=root
      - ME_CONFIG_MONGODB_AUTH_PASSWORD=root
      - ME_CONFIG_MONGODB_PORT=27017
    # to login to panel use: admin/pass
    networks:
      - network

  authentication-ms:
    container_name: authentication-ms
    depends_on:
      - authentication-db
    build:
      context: ./authentication-ms
      # Dev version of Dockerfile
      dockerfile: Dockerfile
      # Prod version of Dockerfile
      # dockerfile: Dockerfile.test
    volumes:
      - ./authentication-ms/app/:/app:ro
    ports:
      - 8000:8000
    environment:
      - WATCHFILES_FORCE_POLLING=true
      - DB_HOSTNAME=authentication-db
      - DB_USERNAME=root
      - DB_PASSWORD=root
      - DB_PORT=27017
      - DB_NAME=shop
      # API ROUTES
      - API_AUTHENTICATION_PREFIX=/api/auth
      # JWT CONF
      - JWT_TOKEN_ALG=HS256
      - JWT_REFRESH_TOKEN_SECRET_KEY=fasfsafasfasfas
      - JWT_ACCESS_TOKEN_SECRET_KEY=okokokokokokok
      - JWT_ACCESS_TOKEN_EXPIRE_MINUTES=10080
      - JWT_REFRESH_TOKEN_EXPIRE_MINUTES=30

    networks:
      - network
    restart: on-failure

  authentication-db:
    image: mongo:7.0.7-rc2-jammy
    container_name: authentication-db
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: authentication
    volumes:
      # - users_db_data:/data/db
      - ./db/authentication-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - network

  products-ms:
    container_name: products-ms
    depends_on:
      - products-db
    build:
      context: ./products-ms
      # Dev version of Dockerfile
      dockerfile: Dockerfile
      # Prod version of Dockerfile
      # dockerfile: Dockerfile.test
    volumes:
      - ./products-ms/app/:/app:ro
    ports:
      - 8001:8000
    environment:
      - WATCHFILES_FORCE_POLLING=true
      - DB_HOSTNAME=products-db
      - DB_USERNAME=root
      - DB_PASSWORD=root
      - DB_PORT=27017
      - DB_NAME=shop
      # API ROUTES
      - API_PRODUCT_PREFIX=/api/prod
      # JWT CONF
      - JWT_TOKEN_ALG=HS256
      - JWT_REFRESH_TOKEN_SECRET_KEY=fasfsafasfasfas
      - JWT_ACCESS_TOKEN_SECRET_KEY=okokokokokokok
      - JWT_ACCESS_TOKEN_EXPIRE_MINUTES=10080
      - JWT_REFRESH_TOKEN_EXPIRE_MINUTES=30

    networks:
      - network
    restart: on-failure

  products-db:
    image: mongo:7.0.7-rc2-jammy
    container_name: products-db
    restart: always
    ports:
      - "27018:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: products
    volumes:
      # - users_db_data:/data/db
      - ./db/products-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - network

volumes:
  users_db_data:
    name: users_db_data

networks:
  network:
