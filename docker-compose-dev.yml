# Dev version is without tests and live reload
version: "3.9"
services:
  ###  ----------------------------- MESSAGE-BROKER  -----------------------------
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zookeeper:2888:3888
    networks:
      - network

  message-broker:
    image: confluentinc/cp-kafka:7.3.2
    hostname: message-broker
    container_name: message-broker
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9999:9999"
    networks:
      - network
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://message-broker:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zookeeper

  ###  ----------------------------- API GATEWAY  -----------------------------
  api-gateway-ms:
    build:
      context: ./api-gateway-ms
      dockerfile: Dockerfile
    container_name: api-gateway-ms
    restart: always
    ports:
      - 8080:8000
    volumes:
      - ./api-gateway-ms/app/:/app:ro
    environment:
      - WATCHFILES_FORCE_POLLING=true
      - JWT_TOKEN_ALG=HS256
      - JWT_ACCESS_TOKEN_SECRET_KEY=okokokokokokok
    networks:
      - network

  ### ----------------------------- AUTHENTICATION -----------------------------
  authentication-ms:
    build:
      context: ./authentication-ms
      # Dev version of Dockerfile
      dockerfile: Dockerfile
      # Prod version of Dockerfile
      # dockerfile: Dockerfile.test
    container_name: authentication-ms
    restart: always
    depends_on:
      - authentication-db
    ports:
      - 8000:8000
    volumes:
      - ./authentication-ms/app/:/app:ro
    environment:
      - WATCHFILES_FORCE_POLLING=true
      - DB_HOSTNAME=authentication-db
      - DB_USERNAME=root
      - DB_PASSWORD=root
      - DB_PORT=27017
      - DB_NAME=shop
      # API ROUTES
      - API_AUTHENTICATION_PREFIX=/api
      # JWT CONF
      - JWT_TOKEN_ALG=HS256
      - JWT_REFRESH_TOKEN_SECRET_KEY=fasfsafasfasfas
      - JWT_ACCESS_TOKEN_SECRET_KEY=okokokokokokok
      - JWT_ACCESS_TOKEN_EXPIRE_MINUTES=10080
      - JWT_REFRESH_TOKEN_EXPIRE_MINUTES=30
    networks:
      - network

  authentication-db:
    image: bitnami/mongodb:7.0.7-debian-12-r0
    container_name: authentication-db
    restart: always
    volumes:
      - ./db/authentication-init.js:/docker-entrypoint-initdb.d/initialize.js
    environment:
      - MONGODB_REPLICA_SET_MODE=primary
      - MONGODB_REPLICA_SET_KEY=123456
      - ALLOW_EMPTY_PASSWORD=yes
      - MONGODB_ROOT_USER=root
      - MONGODB_ROOT_PASSWORD=root
    networks:
      - network

  adminpanel-authentication-db:
    image: mongo-express:1.0.2-20-alpine3.19
    container_name: adminpanel-authentication-db
    depends_on:
      - authentication-db
    ports:
      - "8081:8081"
    environment:
      # this does not seem to work to modify connection server
      - ME_CONFIG_MONGODB_SERVER=authentication-db
      # but this does for some reason
      - ME_CONFIG_MONGODB_URL=mongodb://root:root@authentication-db:27017/
      # db connection username and password because one from link above don't work
      - ME_CONFIG_MONGODB_AUTH_USERNAME=root
      - ME_CONFIG_MONGODB_AUTH_PASSWORD=root
      - ME_CONFIG_MONGODB_PORT=27017
    # to login to panel use: admin/pass
    restart: always
    networks:
      - network

  ### ----------------------------- PRODUCTS -----------------------------
  products-ms:
    build:
      context: ./products-ms
      # Dev version of Dockerfile
      dockerfile: Dockerfile
      # Prod version of Dockerfile
      # dockerfile: Dockerfile.test
    container_name: products-ms
    depends_on:
      - products-db
    ports:
      - 8001:8000
    volumes:
      - ./products-ms/app/:/app:ro
    environment:
      - WATCHFILES_FORCE_POLLING=true
      - DB_HOSTNAME=products-db
      - DB_USERNAME=root
      - DB_PASSWORD=root
      - DB_PORT=27017
      - DB_NAME=shop
      # API ROUTES
      - API_PRODUCT_PREFIX=/api

      # JWT CONF
      - JWT_TOKEN_ALG=HS256
      - JWT_REFRESH_TOKEN_SECRET_KEY=fasfsafasfasfas
      - JWT_ACCESS_TOKEN_SECRET_KEY=okokokokokokok
      - JWT_ACCESS_TOKEN_EXPIRE_MINUTES=10080
      - JWT_REFRESH_TOKEN_EXPIRE_MINUTES=30

    networks:
      - network
    restart: on-failure

  products-db:
    image: bitnami/mongodb:7.0.7-debian-12-r0
    container_name: products-db
    restart: always
    volumes:
      - ./db/products-init.js:/docker-entrypoint-initdb.d/initialize.js
    environment:
      - MONGODB_REPLICA_SET_MODE=primary
      - MONGODB_REPLICA_SET_KEY=123456
      - ALLOW_EMPTY_PASSWORD=yes
      - MONGODB_ROOT_USER=root
      - MONGODB_ROOT_PASSWORD=root
    networks:
      - network

  adminpanel-products-db:
    image: mongo-express:1.0.2-20-alpine3.19
    container_name: adminpanel-products-db
    restart: always
    depends_on:
      - products-db
    ports:
      - "8082:8081"
    environment:
      # this does not seem to work to modify connection server
      - ME_CONFIG_MONGODB_SERVER=products-db
      # but this does for some reason
      - ME_CONFIG_MONGODB_URL=mongodb://root:root@products-db:27017/
      # db connection username and password because one from link above don't work
      - ME_CONFIG_MONGODB_AUTH_USERNAME=root
      - ME_CONFIG_MONGODB_AUTH_PASSWORD=root
      - ME_CONFIG_MONGODB_PORT=27017
    # to login to panel use: admin/pass
    networks:
      - network
  ### ----------------------------- ORDERS -----------------------------
  orders-ms:
    build:
      context: ./orders-ms
      # Dev version of Dockerfile
      dockerfile: Dockerfile
      # Prod version of Dockerfile
      # dockerfile: Dockerfile.test
    container_name: orders-ms
    restart: always
    depends_on:
      - orders-db
    ports:
      - 8002:8000
    volumes:
      - ./orders-ms/app/:/app:ro
    environment:
      - WATCHFILES_FORCE_POLLING=true
      - DB_HOSTNAME=orders-db
      - DB_USERNAME=root
      - DB_PASSWORD=root
      - DB_PORT=27017
      - DB_NAME=shop
      # API ROUTES
      - API_ORDERS_PREFIX=/api
      # JWT CONF
      - JWT_TOKEN_ALG=HS256
      - JWT_REFRESH_TOKEN_SECRET_KEY=fasfsafasfasfas
      - JWT_ACCESS_TOKEN_SECRET_KEY=okokokokokokok
      - JWT_ACCESS_TOKEN_EXPIRE_MINUTES=10080
      - JWT_REFRESH_TOKEN_EXPIRE_MINUTES=30
    networks:
      - network

  orders-db:
    image: bitnami/mongodb:7.0.7-debian-12-r0
    container_name: orders-db
    restart: always
    volumes:
      - ./db/orders-init.js:/docker-entrypoint-initdb.d/initialize.js
    environment:
      - MONGODB_REPLICA_SET_MODE=primary
      - MONGODB_REPLICA_SET_KEY=123456
      - ALLOW_EMPTY_PASSWORD=yes
      - MONGODB_ROOT_USER=root
      - MONGODB_ROOT_PASSWORD=root
    networks:
      - network

  adminpanel-orders-db:
    image: mongo-express:1.0.2-20-alpine3.19
    container_name: adminpanel-orders-db
    depends_on:
      - orders-db
    restart: always
    ports:
      - "8083:8081"
    environment:
      # this does not seem to work to modify connection server
      - ME_CONFIG_MONGODB_SERVER=orders-db
      # but this does for some reason
      - ME_CONFIG_MONGODB_URL=mongodb://root:root@orders-db:27017/
      # db connection username and password because one from link above don't work
      - ME_CONFIG_MONGODB_AUTH_USERNAME=root
      - ME_CONFIG_MONGODB_AUTH_PASSWORD=root
      - ME_CONFIG_MONGODB_PORT=27017
      # to login to panel use: admin/pass
    networks:
      - network
volumes:
  users_db_data:
    name: users_db_data

networks:
  network:
