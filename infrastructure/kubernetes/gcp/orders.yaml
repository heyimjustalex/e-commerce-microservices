apiVersion: apps/v1
kind: Deployment
metadata:
  name: orders-ms-dep
spec:
  replicas: 2
  selector:
    matchLabels:
      app: orders-ms
  template:
    metadata:
      labels:
        app: orders-ms
    spec:
      restartPolicy: Always
      containers:
        - name: orders-ms
          image: heyimjustalex/orders-ms
          imagePullPolicy: "Always"
          env:
            - name: DB_HOSTNAME
              value: "orders-db-svc.default"
            - name: WATCHFILES_FORCE_POLLING
              value: "true"
            - name: KAFKA_BOOTSTRAP_SERVERS
              value: "message-broker-svc:29092"
            - name: DB_USERNAME
              value: root
            - name: DB_PASSWORD
              value: root
            - name: DB_PORT
              value: "27017"
            - name: DB_NAME
              value: shop
            - name: API_ORDERS_PREFIX
              value: "/api"
          livenessProbe:
            httpGet:
              path: /api/orders_health
              port: 8000
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
          resources:
            limits:
              cpu: "100m"
              memory: "100Mi"
            requests:
              cpu: "100m"
              memory: "100Mi"
      tolerations:
        - key: instance_type
          value: spot
          effect: NoSchedule
          operator: Equal
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: team
                    operator: In
                    values:
                      - devops
---
apiVersion: v1
kind: Service
metadata:
  name: orders-ms-svc
spec:
  selector:
    app: orders-ms
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
